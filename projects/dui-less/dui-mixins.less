  ///////////////////
 //  HTML Usable  //
///////////////////

.no-select {
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    -o-user-select: none;
    user-select: none;
}

.no-events {
    pointer-events: none;
}

.on-right {float: right !important;}
.on-left {float: left !important;}

.txt-align-r {text-align: right !important;}
.txt-align-l {text-align: left !important;}
.txt-align-c {text-align: center !important;}

.clearfix {
    &:after {
        .pseudo;
        clear: both;
    }
}



  ///////////////
 //  Various  //
///////////////

@undef: "undefined";

.pseudo() {
	content: "";
	.inline-block;
}

.pointer() {
    cursor: pointer;
}

 /////////
// .for

.for(@i, @n) {.-each(@i)}
.for(@n)     when (isnumber(@n)) {.for(1, @n)}
.for(@i, @n) when not (@i = @n)  {
    .for((@i + (@n - @i) / abs(@n - @i)), @n);
}

 //////////////
// .for-each

.for(@array)   when (default()) {.for-impl_(length(@array))}
.for-impl_(@i) when (@i > 1)    {.for-impl_((@i - 1))}
.for-impl_(@i) when (@i > 0)    {.-each(extract(@array, @i))}



  //////////////
 //  filter  //
//////////////

.filter(@filter) {
    -webkit-filter: @filter;
    -moz-filter: @filter;
    -ms-filter: @filter;
    filter: @filter;
}


  //////////////////
 //  Animations  //
//////////////////

.animation(@animation) {
    -webkit-animation: @animation;
    -moz-animation: @animation;
    -ms-animation: @animation;
    animation: @animation;
}

.animation-iteration-count(@animation) {
    -webkit-animation-iteration-count: @animation;
    -moz-animation-iteration-count: @animation;
    -ms-animation-iteration-count: @animation;
    animation-iteration-count: @animation;
}

.animation-direction(@animation) {
    -webkit-animation-direction: @animation;
    -moz-animation-direction: @animation;
    -ms-animation-direction: @animation;
    animation-direction: @animation;
}

.animation-duration(@animation) {
    -webkit-animation-duration: @animation;
    -moz-animation-duration: @animation;
    -ms-animation-duration: @animation;
    animation-direction: @animation;
}

.animation-delay(@delay) {
    -webkit-animation-delay: @delay;
    -moz-animation-delay: @delay;
    -ms-animation-delay: @delay;
    animation-delay: @delay;
}

.animation-fill-mode(@fill) {
    -webkit-animation-fill-mode: @fill;
    -moz-animation-fill-mode: @fill;
    -ms-animation-fill-mode: @fill;
    animation-fill-mode: @fill;
}

.keyframes(@name, @keys) {
    @-webkit-keyframes @name {@keys();}
    @-moz-keyframes @name {@keys();}
    @-ms-keyframes @name {@keys();}
    @keyframes @name {@keys();}
}

.play-animation(@name, @duration: 0.7s, @easing: ease, @iteration: 1, @fill: both, @direction: normal) {
    .animation(@name @duration @easing @iteration @fill @direction);
}

.set-animation(@name, @keys, @duration: 0.7s, @easing: ease, @iteration: 1, @fill: both, @direction: normal) {
    .keyframes(@name, @keys);
    .play-@{name} {
        //.play-animation(@name, @duration, @iteration: 1);
        .animation(@name @duration @easing @iteration @fill @direction);
    }
}



  ///////////////////
 //  Transitions  //
///////////////////

.transition(@transition) {
	-webkit-transition: @transition;
	-moz-transition: @transition;
	-ms-transition: @transition;
	//-o-transition: @transition;
	transition: @transition;
}

@time: 0.5s;

.animate(@duration: 0.5s, @easing: ease, @type: all) {
	.transition(@type @duration @easing);
}

.animate-enter(@duration: @time, @args) {
    &:hover {.animate(@duration, @args);}
}

.animate-exit(@duration: @time, @args) {
    .animate(@duration, @args);
    &:hover {.animate(0s);}
    &:active {.animate(0s);}
}

.animate-pointerdown(@duration: @time, @args) {
    &:active {.animate(@duration, @args);}
}

.animate-pointerup(@duration: @time, @args) {
    .animate(@duration, @args);
    &:active {.animate(0s);}
}



  /////////////////
 //  Transform  //
/////////////////

.transform(@transform) {
    -webkit-transform: @transform;
    -moz-transform: @transform;
    -ms-transform: @transform;
    //-o-transform: @transform;
    transform: @transform;
}

.transform-origin(@transform) {
    -webkit-transform-origin: @transform;
    -moz-transform-origin: @transform;
    -ms-transform-origin: @transform;
    //-o-transform-origin: @transform;
    transform-origin: @transform;
}



  /////////////////////////
 //  Transform Effects  //
/////////////////////////

.transform-basic(@S: 1, @Y: 0, @X: 0, @R: 0) {
    .transform(translate3d(@X,@Y,0) scale3d(@S,@S,1) rotate3d(0,0,1,@R));
}

@translate-reset: translate3d(0,0,0);
@scale-reset: scale3d(1,1,1);

.transform-reset() {.transform(@translate-reset @scale-reset);}
.scale(@S) {.transform(scale3d(@S,@S,1));}
.translate(@Y, @X) {.transform(translate3d(@X,@Y,0));}

@translate-up: translate3d(0,-100%,0);
@translate-down: translate3d(0,100%,0);
@translate-left: translate3d(-100%,0,0);
@translate-right: translate3d(100%,0,0);

.translate-up() {.translate(-100%);}
.translate-down() {.translate(100%);}
.translate-left() {.translate(0,-100%);}
.translate-right() {.translate(0,100%);}



  /////////////////
 //  Gradients  //
/////////////////

.gradient(@gradient) {
    background: -webkit-linear-gradient(@gradient);
    background: -moz-linear-gradient(@gradient);
    background: -ms-linear-gradient(@gradient);
    background: -o-linear-gradient(@gradient);
    background: linear-gradient(@gradient);
}

.vert-gradient(@grad1: #000, @grad2: #fff) {
    //background: @grad1;
    background: -webkit-linear-gradient(top, @grad1 0%,@grad2 100%);
    background: -moz-linear-gradient(top, @grad1 0%, @grad2 100%);
    background: -ms-linear-gradient(top, @grad1 0%,@grad2 100%);
    background: linear-gradient(top, @grad1 0%,@grad2 100%);
}



  ///////////////
 //  Flexbox  //
///////////////

.flex-grow(@args: 1) {
    -webkit-flex-grow: @args;
    flex-grow: @args;
}

.flex-shrink(@args: 0) {
    -webkit-flex-shrink: @args;
    flex-shrink: @args;
}

.flex-basis(@args) {
    -webkit-flex-basis: @args;
    flex-basis: @args;
}

.flex-direction(@args) {
    -webkit-flex-direction: @args;
    flex-direction: @args;
}

.flex-wrap(@args: wrap) {
    -webkit-flex-wrap: @args;
    flex-wrap: @args;
}

.flex-flow(@args) {
    -webkit-flex-flow: @args;
    flex-flow: @args;
}

.justify-content(@args) {
    -webkit-justify-content: @args;
    justify-content: @args;
}

.align-items(@args) {
    -webkit-align-items: @args;
    align-items: @args;
}

.align-content(@args) {
    -webkit-align-content: @args;
    align-content: @args;
}

.align-self(@args) {
    -webkit-align-self: @args;
    align-self: @args;
}

.flex() {
    display: -webkit-flex; //safari
    display: flex;
}

.flexbox() {
    display: -webkit-flex; //safari
    display: flex;
}

.display-flex() {
    display: -webkit-flex; //safari
    display: flex;
}

.inline-flex() {
    display: -webkit-inline-flex; //safari
    display: inline-flex;
}

.flex-basic(@justify-content: space-between, @align-items: center, @display: flex) {
    //safari
    display: -webkit-flex;
    display: @display;
    .justify-content(@justify-content);
    .align-items(@align-items);
}

.flex-justify() {
    display: -webkit-flex;
    .flex;
    .justify-content(space-between);
}

.flex-center() {
	.flex;
	.justify-content(center);
	.align-items(center);
}



  ///////////////////
 //  Positioning  //
///////////////////

.z(@z: 1) {z-index: @z;}

.absolute() {position: absolute;}
.relative() {position: relative;}
.fixed() {position: fixed;}
.inline-block() {display: inline-block;}
.inline() {display: inline;}
.block() {display: block;}
.none() {display: none;}

.table() {display: table;}
.table-cell() { display: table-cell;}


.pos-rel {position: relative;}
.pos-abs {position: absolute;}
.pos-fix {position: fixed;}
.dis-block {display: block;}
.dis-inline {display: inline;}
.dis-inblock {display: inline;}

.dis-flex {.flexbox;}
.dis-inflex {.inline-flex;}

.align-items-center {.align-items(center);}
.justify-center {.justify-content(center);}
.justify-space-between {.justify-content(space-between);}


.t0() {top: 0;}
.b0() {bottom: 0;}
.l0() {left: 0;}
.r0() {right: 0;}

.tb0() {
	.t0;
	.b0;
}

.lr0() {
	.l0;
	.r0;
}

.tblr0() {
	.t0;
	.b0;
	.l0;
	.r0;
}

.tl0() {
	.t0;
	.l0;
}

.w100() {width: 100%;}
.h100() {height: 100%;}

.w0() {width: 0;}
.h0() {height: 0;}

.wh100() {
	.w100;
	.h100;
}

.fill-space() {
    .absolute;
    .t0;
    .l0;
    .w100;
    .h100;
}

.fill-space-tblr() {
    .absolute;
    .tblr0;
}



  //////////////
 //  Radius  //
//////////////

.radius(@radius: @rad-default) {
    border-radius: @radius;
}

.round() {
    border-radius: 100%;
}

.top-radius(@r: @undef) {
    .radius(@r);
	border-bottom-right-radius: 0;
	border-bottom-left-radius: 0;
}

.bottom-radius(@r: @undef) {
    .radius(@r);
	border-top-right-radius: 0;
	border-top-left-radius: 0;
}

.left-radius(@r: @undef) {
    .radius(@r);
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
}

.right-radius(@r: @undef) {
    .radius(@r);
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
}



  /////////////////////
 //  Text Overflow  //
/////////////////////

.truncate() {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}



  ///////////////
 //  Justify  //
///////////////

.justify-base() {
    text-align: justify;
	line-height: 0;

	&:after {
		content:"";
		display: inline-block;
		width: 100%;
		height: 0px;
        font-size: 0;
		vertical-align: top;

        font-size: 0;
        line-height: 0;
        pointer-events: none;
        visibility: hidden;
	}
}

.justify-element(@v-align: middle, @t-align: left) {
    .relative;
    z-index: 1;
    line-height: 1;
    display: inline-block;
	text-align: @t-align;
	vertical-align: @v-align;
}

.justify-children(@v-align: middle, @t-align: left) {
	.justify-base;
	> * {.justify-element(@v-align, @t-align);}
}

.justify-elements {.justify-children}



  /////////////////
 //  Alignment  //
/////////////////

.inline-base(@h-align: inherit) {
    font-size: 0;
    text-align: @h-align;
}

.inline-element(@v-align: middle, @t-align: left) {
    font-size: 14px; //fallback
    font-size: 1rem;
    display: inline-block;
    text-align: @t-align;
    vertical-align: @v-align;
}

.inline-children(@h-align: inherit, @v-align: middle, @t-align: left) {
    .inline-base(@h-align);
    > * {.inline-element(@v-align, @t-align);}
}

.inline-elements {.inline-children;}



  ///////////////
 //  V-align  //
///////////////

.v-align() {
    display: inline-block;
	vertical-align: middle;
}

.v-align-pseudo-style() {
    .v-align;
    content:"";
    height: 100%;
    width: 0;
    //font-size: 0;
    //line-height: 0;
}

// doesn't seem to work...
.v-align-pseudo(@pseudo: after) {
    //&:@{pseudo} {.v-align-pseudo-style;}
    @pseudo-bugfix: e(":@pseudo");
    &@{pseudo-bugfix} {.v-align-pseudo-style;}
}

.v-align-pseudo-before() {
    //.v-align-pseudo(before);
    &:before {.v-align-pseudo-style;}
}

.v-align-pseudo-after() {
    //.v-align-pseudo(after);
    &:after {.v-align-pseudo-style;}
}

.v-align-base() {
    > * {.v-align;}
}

.v-align-children(@pseudo: after) {
    .v-align-base;
    //.v-align-pseudo(@pseudo);
    .v-align-pseudo-after;
}

.v-align-content {
    .v-align-children;
}

//doesn't work yet...
.vert-justified() {
    .v-align-children;
    .justify-elements;
}



  /////////////
 //  Fades  //
/////////////

//opacity
  .o0() {opacity: 0.0;}
 .o05() {opacity: 0.05;}
 .o10() {opacity: 0.1;}
 .o15() {opacity: 0.15;}
 .o20() {opacity: 0.2;}
 .o25() {opacity: 0.25;}
 .o50() {opacity: 0.5;}
 .o75() {opacity: 0.75;}
 .o80() {opacity: 0.8;}
 .o90() {opacity: 0.9;}
.o100() {opacity: 1.0;}

.o(@opacity: 1) {opacity: @opacity}
.o0() {.o(0);}
.o1() {.o(1);}

.fade-out() {
    visibility: hidden;
    opacity: 0.0;
    pointer-events: none;
}

.fade-in() {
    //visibility: visible;
    visibility: inherit; //visible children with fade-in fix
    visibility: initial;
    opacity: 1.0;
    pointer-events: auto;
}



  ///////////////
 // Triangles //
///////////////

.triangle-basic(@S: 10px, @C: white, @D1: bottom, @D2: @undef) {
    width: 0;
    height: 0;
    border: @S solid transparent;
    border-@{D1}-color: @C;
    border-@{D2}-color: @C;
}

//use font-size to change size of triangle
.pointer-triangle(@location, @size: 20px) {
    .z(-1);
    .absolute;
    font-size: @size;
    width: 1em;
    height: 1em;
    .transform-basic(@R: 45deg);

    //style
    background: inherit;
    border: inherit;
    
    & when (@location = top) {
        .t0;
        left: 50%;
        margin-top: -0.5em;
        margin-left: -0.5em;
        border-bottom-color: transparent !important;
        border-right-color: transparent !important;
    }

    & when (@location = bottom) {
        .b0;
        left: 50%;
        margin-bottom: -0.5em;
        margin-left: -0.5em;
        border-top-color: transparent !important;
        border-left-color: transparent !important;
    }

    & when (@location = left) {
        .l0;
        top: 50%;
        margin-top: -0.5em;
        margin-left: -0.5em;
        border-top-color: transparent !important;
        border-right-color: transparent !important;
    }

    & when (@location = right) {
        .r0;
        top: 50%;
        margin-top: -0.5em;
        margin-right: -0.5em;
        border-bottom-color: transparent !important;
        border-left-color: transparent !important;
    }
}



  ///////////////
 // font-face //
///////////////

// Font face mixin WITHOUT old EOT(IE) or SVG support.
.font-face(@fontname, @fontfile, @fontweight: normal, @fontstyle: normal) {
    @font-face {
        font-family: "@{fontname}";
        src: 
            //url("@{fontfile}.woff2") format("woff2"), 
            url("@{fontfile}.woff") format("woff"), 
            url("@{fontfile}.ttf") format("truetype");
        font-weight: @fontweight;
        font-style: @fontstyle;
    }
}

// Font face mixin WITHOUT WOFF2, old EOT(IE), or SVG support + DATA URIs.
.font-face-data-uri(@fontname,  @data-uri-woff2, @data-uri-woff, @data-uri-ttf, @fontweight: normal, @fontstyle: normal) {
    @font-face {
        font-family: "@{fontname}";
        src: url("data:font/woff2;charset=utf-8;base64,@{data-uri-woff2}") format("woff2"), 
             url("data:font/woff;charset=utf-8;base64,@{data-uri-woff}") format("woff"), 
             url("data:font/truetype;charset=utf-8;base64,@{data-uri-ttf}") format("truetype");
        font-weight: @fontweight;
        font-style: @fontstyle;
    }
}